#!/bin/bash
#
# by Jama Ariai (jama.ariai@oc.jlug.de)
#

#### list of Variables in alphabetic order

# Density		= Density of the solvent in g/mL
# MW_M			= Molar Mass of the solute in g/mol
# MW_S			= Molar Mass of the solvent in g/mol
# N_cav			= Number of accessible cavities
# Permitivity	= Relative Permitivity of the solvent 
# R 			= ???
# r_cav			= ??? in Ang
# r_gyr			= Radius of Gyration in Ang
# r_z			= Help-Radius for S_rot
# solvent		= Solvent Specification
# S_cav			= entropy of cavitation formation in cal/mol*K
# S_conc		= standard state correction for entropy in cal/mol*K
# S_rot			= rotational entropy in cal/mol*K
# S_rot_diff	= S_rot - S_rot_gas
# S_rot_gas		= rotational entropy in gas-phase in cal/mol*K
# S_soln		= final solution-phase entropy in cal/mol*K
# S_solv 		= Entropy of Solvation = S_soln - S_gas + S_conc
# S_trans		= translational entropy in cal/mol*K
# S_trans_diff	= S_trans - S_trans_gas
# S_vib			= vibrational entropy in cal/mol*K
# Temperature	= Temperature in K
# THETA_0		= Help-variable for S_rot
# Vol			= ??? in Ang**3
# Vol_cav		= ??? in Ang**3
# Vol_free		= ??? in Ang**3
# Vol_M			= vdW-Volume of the solute in Ang**3
# Vol_S			= vdW-Volume of the solvent in Ang**3
# x				= ???
# y				= ???

#### Fundamental Physical Constants from https://physics.nist.gov/cuu/Constants/index.html
h_Planck='(6.62607015*10^(-34))'	# Planck Constant in J*s (https://physics.nist.gov/cgi-bin/cuu/Value?h|search_for=planck)
k_Boltz='(1.380649*(10^-23))'		# Boltzmann Constant in J/K (https://physics.nist.gov/cgi-bin/cuu/Value?k|search_for=boltzmann)						
N_Avog='(6.02214076*(10^23))' 		# Avogadro Constant in 1/mol (https://physics.nist.gov/cgi-bin/cuu/Value?na|search_for=adopted_in!)
PI='(4*a(1))'
R_gas='(8.314462618/4.184)' 		# Molar Gas Constant in cal/mol*K (https://physics.nist.gov/cgi-bin/cuu/Value?r|search_for=gas+constant)
# Note: x^(n/m) = exp[ (n*ln x)/m ], i.e., "e( n*l(x)/m )"

###################
#### Functions ####
###################

arccos () {
	    scale=3
	        if (( $(echo "$1 == 0" | bc -l) )); then
			        echo "a(1)*2" | bc -l
				    elif (( $(echo "(-1 <= $1) && ($1 < 0)" | bc -l) )); then
					            echo "scale=${scale}; a(1)*4 - a(sqrt((1/($1^2))-1))" | bc -l
						        elif (( $(echo "(0 < $1) && ($1 <= 1)" | bc -l) )); then
								        echo "scale=${scale}; a(sqrt((1/($1^2))-1))" | bc -l
									    else
										            echo "input out of range (arccos)"
											            return 1
												        fi
												}

												### calcultes the rotational entropy
												### PREREQUISITES (besides solvent data): S_rot_gas, r_gyr, (r_cav from S_trans-function)
												### OUTPUT: $S_rot in cal/mol*K
												function calcS_rot {
													unset S_rot r_z S_rot_diff r_free THETA_0 THETA_0_arg r_cav

													r_cav=$(echo "e( l((3*$Vol_cav)/(4*$PI))/3 )") 
													if [[ -z $r_cav ]] || [[ -z $r_gyr ]]; then echo "S_rot cannot be calculated. Radii missing."; exit; fi

													if (( $(echo "$r_cav >= $r_gyr" | bc -l) )); then	# case A 
															r_z=$(echo "$r_cav-$r_gyr" | bc -l)
																S_rot_diff=$(echo "(3*$R_gas*l($r_z/$r_cav))" | bc -l)	### S_rot_diff = S_rot_soln - S_rot_gas
															else	# case B
																	if [[ -z $Vol_free ]]; then echo "S_rot cannot be calculated. Free Volume missing."; removeTempFiles; exit; fi
																		echo "CAUTION!!! The radius of gyration is greater than the radius of the cavity! S_rot is modified. This has never occured before and is not tested for reliability. (large, non-spherical solute in dense solvent?) Please report this case (jama.ariai@oc.jlug.de)."
																			echo "CAUTION!!! The radius of gyration is greater than the radius of the cavity! S_rot is modified. This has never occured before and is not tested for reliability. (large, non-spherical solute in dense solvent?) Please report this case (jama.ariai@oc.jlug.de)." >> $tempWarning
																				r_free=$(echo "e( l((3*$Vol_free)/(4*$PI))/3 )" | bc -l)
																					r_z=$r_free
																						THETA_0_arg=$(echo "$r_gyr/(sqrt((($r_gyr)^2)+(($r_free)^2)))" | bc -l)
																							THETA_0=$(arccos $THETA_0_arg)
																								THETA_0=$(echo 2*$THETA_0 | bc -l)
																									S_rot_diff=$(echo "$R_gas*(2*l($THETA_0/$PI)+$Temperature)+(3*$R_gas*l($r_z/$r_cav))" | bc -l)	### ### S_rot_diff = S_rot_soln - S_rot_gas
																								fi
																								echo "S_rot_diff(T=$Temperature K) in cal/mol*K: $S_rot_diff" 
																								if ! [[ -z $S_rot_gas ]]; then 
																										S_rot=$(echo "$S_rot_gas+$S_rot_diff" | bc -l)
																											echo "S_rot(T=$Temperature K) in cal/mol*K: $S_rot" 
																										fi

																									}

																									### calculates the translational entropy
																									### PREREQUISITES (besides solvent data): Vol_M, MW_M
																									### OUTPUT: $S_trans in cal/mol*K
																									function calcS_trans {
																										# Note: x^(n/m) = exp[ (n*ln x)/m ], i.e., "e( n*l(x)/m )"
																										unset Vol_free Vol_cav x N_cav Vol S_trans S_trans_diff

																										Vol_free=$(echo "(($MW_S*(10^24))/($N_Avog*$Density))-$Vol_S" | bc -l)
																										Vol_cav=$(echo "(e( 1*l($Vol_M)/3 )+e( 1*l($Vol_free)/3 ))^3" | bc -l)
																										echo "The cavity volume is $Vol_cav Ang**3"
																										if (( $(echo "$Vol_free > $Vol_M" | bc -l) )); then
																												x=$(echo "(e( 2*l($Vol_free)/3 )-e( 2*l($Vol_M)/3 ))/(e( 2*l($Vol_free)/3 )+e( 2*l($Vol_S)/3 ))" | bc -l)
																											else
																													x=0
																												fi
																												N_cav=$(echo "1+((4*e( 2*l($Vol_cav)/3 ))/(e( 2*l($Vol_free)/3 )+e( 2*l($Vol_S)/3 )))*((1/(1-$x))-1)" | bc -l)
																												echo "Number of accessible cavities: $N_cav (typically 1 unless small solute in bulky/low density solvents)"
																												Vol=$(echo "$N_cav*$Vol_cav" | bc -l)
																												S_trans_diff=$(echo "$R_gas*l($Vol/$Temperature)-9.792392" | bc -l)	### S_trans_diff = S_trans - S_trans_gas = R*ln[Vsoln/Vgas]
																												#S_trans=$(echo "$R_gas*((1.5*l((2*$PI*(10^(-3))*$k_Boltz)/($N_Avog*($h_Planck^(2)))))+(1.5*l($MW_M*$Temperature))+(l((10^(-30))*$Vol))+2.5)" | bc -l)
																												S_trans=$(echo "$R_gas*((1.5*l($MW_M*$Temperature))+l($Vol)-6.079431401)" | bc -l)
																												echo -e "S_trans_diff(T=$Temperature K) in cal/mol*K: $S_trans_diff\nS_trans(T=$Temperature K) in cal/mol*K: $S_trans"
																												Vol_cav=$(echo $Vol_cav | xargs printf "%.*f\n" 3)
																												N_cav=$(echo $N_cav | xargs printf "%.*f\n" 2)
																											}

																											### calculates the entropy of cavity formation
																											### PREREQUISITES (besides solvent data): Vol_M
																											### OUTPUT: $S_cav in cal/mol*K
																											function calcS_cav {
																												unset y R S_cav

																												y=$(echo "(3/(4*$PI))*(($Permitivity-1)/($Permitivity+2))" | bc -l)
																												R=$(echo "e(l($Vol_M/$Vol_S)/3)" | bc -l)
																												S_cav=$(echo "-$R_gas*((-l(1-$y))+((3*$y*$R)/(1-$y))+(((3*$y)/(1-$y))+(4.5*(($y/(1-$y))^2)))*($R^2))" | bc -l)

																												#bugfix
																												#echo y: $y
																												#echo R: $R
																												echo "S_cav(T=$Temperature K) in cal/mol*K: $S_cav"
																											}

																											### calculates the standard state correction 
																											### general Formula: S_conc = R * ln{ci/cf} with ci and cf initial and final concentration respectively
																											### A (solute != solvent): 1 bar, 1 M (IUPAC): S_conc[cal/mol*K] = -R[cal/mol*K] * l{T[K]} + 4.942522175 cal/mol*K
																											### B (solute = solvent): 1 bar, liq (IUPAC): S_conc[cal/mol*K] = R[cal/mol*K] * l{(M[g/mol])/(T[K]*rho[g/mL]*1000)} + 4.942522175 cal/mol*K
																											### B = A + R[cal/mol*K] * l{(M[g/mol])/(rho[g/mL]*1000)} = A + C
																											### OUTPUT: $S_conc in cal/mol*K
																											function calcS_conc {
																												S_conc=$(echo "-$R_gas*l($Temperature)+4.942522175" | sed 's/--/+/g' | bc -l) ### case A
																												if ! [[ $conccorr -eq 1 ]]; then	### case A: solute != solvent
																														echo "The standard state of the condensed phase is 1 mol/L."
																															S_conc_add=0
																																ref_sol='1 M'
																															else								### case B: solute = solvent
																																	echo "The standard state of the condensed phase is the pure liquid-phase."
																																		S_conc_add=$(echo "$R_gas*l(($MW_S)/(1000*$Density))" | sed 's/--/+/g' | bc -l) ### term C
																																			ref_sol='liq'
																																		fi
																																		S_conc=$(echo "$S_conc+$S_conc_add" | sed 's/--/+/g' | bc -l)
																																		echo "S_conc(T=$Temperature K, 1 bar, $ref_sol) in cal/mol*K: $S_conc"
																																	}

																																	function removeTempFiles {
																																		TEMPFILES=($(echo "$tempSolventData $tempWarning $tempInputInfo $tempcalcGyradius $tempcalcVolume $tempentropies"))
																																		for (( i=0 ; i < ${#TEMPFILES[@]} ; i++ )); do
																																				if [[ -f ${TEMPFILES[$i]} ]]; then rm ${TEMPFILES[$i]}; fi
																																			done
																																		}

																																		function checkExitCode {	### if last exit-code is non-zero ERRORFILE is printed and temporary files are removed

																																			if [ $? -ne 0 ]; then
																																					echo "ERROR: non-zero exit code!!"
																																						if [[ -f $ERRORFILE ]]; then
																																									echo "This might help to fix your error:"
																																											cat $ERRORFILE
																																												fi
																																													if [[ -f $tempWarning ]]; then
																																																echo "Besides following warnings occured:"
																																																		cat $tempWarning
																																																			fi
																																																				removeTempFiles
																																																					exit
																																																				fi

																																																			}

																																																			function newSection {
																																																				echo "----------------------------------------------------------------------------------------------------------"
																																																			}

																																																			#####################
																																																			### PREREQUISITES ###
																																																			#####################

																																																			scripts=($(echo "readSolventLibrary calcVolume_vdW calcGyradius analyzeGBV convertPTE bin.ASV.1.3.11.linux64.intel"))
																																																			for (( i=0 ; i < ${#scripts[@]} ; i++ )); do
																																																					if [[ -z $(command -v ${scripts[$i]}) ]]; then echo "Cannot execute all necessary scripts. Command not found: ${script[$i]}"; exit 127; fi
																																																				done

																																																				##################
																																																				#### Defaults ####
																																																				##################

																																																				unset FILE SUFFIX OUTFILE Vol_M MW_M r_gyr S_rot_gas HARMFREQS Orca_Srot_warning Prog S_rot_sym_corr deuterated

																																																				solvent=benzene
																																																				Temperature=298.15	# in K
																																																				Density=''		# in g/cm^3
																																																				MW_S=''			# in g/mol
																																																				Vol_S=''		# in Ang**3
																																																				Permitivity=''
																																																				conccorr=0	### default: solute != solvent
																																																				thermo=0	### default: no thermochemistry available

																																																				#################
																																																				#### Options ####
																																																				#################

																																																				while getopts "hf:s:T:P:M:D:V:cS:d:" OPTION; do
																																																					        case $OPTION in
																																																							                h) echo "Help-File does not exist (yet)."; exit
																																																										                ;;
																																																																f) FILE=$OPTARG
																																																																					;;
																																																																									s) solvent=$OPTARG
																																																																														;;
																																																																														                T) re='^[0-9]+([.][0-9]+)?$'
																																																																																						if [[ $OPTARG =~ $re ]]; then
																																																																																													Temperature=$OPTARG	
																																																																																																		else
																																																																																																									echo "Irregular format for the Temperature (in K). Aborting."; exit
																																																																																																														fi
																																																																																																														                ;;
																																																																																																																				P) Permitivity=$OPTARG
																																																																																																																									;;
																																																																																																																													M) MW_S=$OPTARG
																																																																																																																																		;;
																																																																																																																																						D) Density=$OPTARG
																																																																																																																																											;;
																																																																																																																																															V) Vol_S=$OPTARG
																																																																																																																																																				;;
																																																																																																																																																								c) conccorr=1 # solute=solvent for standard state correction (S_conc)
																																																																																																																																																													;;
																																																																																																																																																																	S)	SymmNum_man=$OPTARG
																																																																																																																																																																							if (( "$SymmNum_man" >= "1" )); then S_rot_sym_corr=$(echo "-$R_gas*l($SymmNum_man)" | bc -l); else echo "Invalid Symmetry Number"; exit; fi
																																																																																																																																																																											;;
																																																																																																																																																																															d) deuterated=$OPTARG #degree of deuteration (integer > 0)
																																																																																																																																																																																				;;
																																																																																																																																																																																								\?)
																																																																																																																																																																																														echo -e  "\033[0;31m ERROR! Script stopped! \033[0m "
																																																																																																																																																																																																			echo "Invalid option: -$OPTARG"
																																																																																																																																																																																																								exit
																																																																																																																																																																																																												;;
																																																																																																																																																																																																												        esac
																																																																																																																																																																																																												done

																																																																																																																																																																																																												##########################
																																																																																																																																																																																																												#### READ INPUT FILE #####
																																																																																																																																																																																																												##########################

																																																																																																																																																																																																												if ! [[ -f $FILE ]] && ! [[ -f $1 ]]; then
																																																																																																																																																																																																														echo "Input-File does not exist. Aborting."
																																																																																																																																																																																																															exit
																																																																																																																																																																																																														elif [[ -f $1 ]]; then
																																																																																																																																																																																																																FILE=$1
																																																																																																																																																																																																															fi
																																																																																																																																																																																																															SUFFIX=$(echo $FILE | rev | cut -f1 -d'.' | rev)
																																																																																																																																																																																																															#### List of Temporary Files
																																																																																																																																																																																																															tempSolventData=$(echo "temp-SolventData-"$FILE".txt" | sed "s/.$SUFFIX//")
																																																																																																																																																																																																															tempWarning=$(echo "temp-warning-"$FILE".txt" | sed "s/.$SUFFIX//")
																																																																																																																																																																																																															tempInputInfo=$(echo "tempInputInfo-"$FILE".txt" | sed "s/.$SUFFIX//")
																																																																																																																																																																																																															tempcalcGyradius=$(echo "temp-calcGyradius-"$FILE".txt" | sed "s/.$SUFFIX//")
																																																																																																																																																																																																															tempcalcVolume=$(echo "temp-calcVolume_vdW-"$FILE".txt" | sed "s/.$SUFFIX//")
																																																																																																																																																																																																															tempentropies=$(echo "temp-entropies-"$FILE".txt" | sed "s/.$SUFFIX//")
																																																																																																																																																																																																															RESULTFILE=$(echo ""$FILE"_EntropySolv_"$solvent".txt" | sed "s/.$SUFFIX//")
																																																																																																																																																																																																															if [[ -f $tempWarning ]]; then
																																																																																																																																																																																																																	echo "Info: $tempWarning is removed to avoid any artificial errors. For safety its content is printed here"
																																																																																																																																																																																																																		cat $tempWarning
																																																																																																																																																																																																																			rm $tempWarning
																																																																																																																																																																																																																		fi

																																																																																																																																																																																																																		echo "Input: $FILE"
																																																																																																																																																																																																																		echo "Output: $RESULTFILE"
																																																																																																																																																																																																																		echo "All entropies are given in cal/mol*K at T=$Temperature K (unless specified differently)" > $tempInputInfo
																																																																																																																																																																																																																		echo "Input-File is $FILE" >> $tempInputInfo
																																																																																																																																																																																																																		echo "Calculation of S_solv [= S_soln - S_gas + dS_conc]" >> $tempInputInfo

																																																																																																																																																																																																																		case $SUFFIX in	### valid formats: XYZ and OUT
																																																																																																																																																																																																																				xyz)
																																																																																																																																																																																																																							XYZFILE=$FILE
																																																																																																																																																																																																																								;;
																																																																																																																																																																																																																									out)	
																																																																																																																																																																																																																												OUTFILE=$FILE
																																																																																																																																																																																																																														out2xyz $OUTFILE
																																																																																																																																																																																																																																XYZFILE=$(echo $OUTFILE | sed 's/.out/.xyz/')
																																																																																																																																																																																																																																		if grep -i -q "thermochemistry" $OUTFILE; then ### check if there is thermochemistry
																																																																																																																																																																																																																																						thermo=1
																																																																																																																																																																																																																																									thermoline=$(tac $OUTFILE | grep -n -i -m1 "thermochemistry" | cut -f1 -d':')
																																																																																																																																																																																																																																												THERMOSECTION=$(tac $OUTFILE | sed -n 1,"$thermoline"p | tac)
																																																																																																																																																																																																																																															if grep -q "Entering Gaussian System, Link 0" $OUTFILE; then	### GAUSSIAN
																																																																																																																																																																																																																																																				PROG=Gaussian
																																																																																																																																																																																																																																																								S_rot_gas=$(echo "$THERMOSECTION" | grep -A15 "Zero-point correction" | grep Rotational | awk '{print $NF}') ## in cal/mol*K
																																																																																																																																																																																																																																																												checkTemperature=$(echo "$THERMOSECTION" | grep -m1 Temperature | awk '{print $2}')	### Temperature for extracted S_rot_gas
																																																																																																																																																																																																																																																																HARMFREQS=($(echo "$THERMOSECTION" | grep "Frequencies" | awk '{print $3,$4,$5}' | tr ' ' '\n'))
																																																																																																																																																																																																																																																																			elif grep -q "* O   R   C   A *" $OUTFILE; then	### ORCA
																																																																																																																																																																																																																																																																								PROG=Orca
																																																																																																																																																																																																																																																																												S_rot_gas=$(echo "$THERMOSECTION" | grep -A20 "ENTROPY" | grep -m1 "Rotational entropy" | awk '{print $4}') ## in a.u.
																																																																																																																																																																																																																																																																																checkTemperature=$(echo "$THERMOSECTION" | grep -m1 "Temperature" | awk '{print $3}')
																																																																																																																																																																																																																																																																																				PointGroup=$(echo "$THERMOSECTION" | grep -m1 "Point Group" | awk '{print $3}')
																																																																																																																																																																																																																																																																																								SymmNum=$(echo "$THERMOSECTION" | grep -m1 "Symmetry Number" | awk '{print $NF}')
																																																																																																																																																																																																																																																																																												S_rot_gas=$(echo "("$S_rot_gas"*627509.5)/$checkTemperature" | bc -l) ## in cal/mol*K
																																																																																																																																																																																																																																																																																												#				Orca_Srot_warning=$(grep -A24 "CAUTION: The rotational entropy" $OUTFILE)	# warning about neglecting symmetry number in orca for S_rot_gas
																																																																																																																																																																																																																																																																																																HARMFREQS=($(echo "$THERMOSECTION" | grep "freq\." | awk '{print $2}'))
																																																																																																																																																																																																																																																																																																			else
																																																																																																																																																																																																																																																																																																								echo -e "Could not identify the out-File: $OUTFILE\nOnly Gaussian and Orca are supported!"
																																																																																																																																																																																																																																																																																																											fi
																																																																																																																																																																																																																																																																																																														if ! [[ -z $S_rot_sym_corr ]]; then
																																																																																																																																																																																																																																																																																																																			if [[ -z $SymmNum ]]; then echo "Could not find a Symmetry Number in $OUTFILE. It is assumed Sn=1"; SymmNum=1; fi
																																																																																																																																																																																																																																																																																																																							S_rot_sym_corr=$(echo "$S_rot_sym_corr+$R_gas*l($SymmNum)" | bc -l)
																																																																																																																																																																																																																																																																																																																											S_rot_gas=$(echo "$S_rot_gas+$S_rot_sym_corr" | bc -l)
																																																																																																																																																																																																																																																																																																																															SymmNum=$(echo ""$SymmNum"-->"$SymmNum_man"")
																																																																																																																																																																																																																																																																																																																																		fi
																																																																																																																																																																																																																																																																																																																																					S_rot_gas=$(echo ""$S_rot_gas"+(1.5*"$R_gas"*l($Temperature/$checkTemperature))" | bc -l | xargs printf "%.*f\n" 3) ### Adjust temperature for S_rot_gas
																																																																																																																																																																																																																																																																																																																																								echo "Calculation of S_soln [= S_trans + S_rot + S_vib + S_cav + dS_conc]" >> $tempInputInfo
																																																																																																																																																																																																																																																																																																																																								#			if ! [[ $(echo $checkTemperature | xargs printf "%.*f\n" 1) = $(echo $Temperature | xargs printf "%.*f\n" 1) ]]; then
																																																																																																																																																																																																																																																																																																																																								#				echo "CAUTION!!! The temperature in $OUTFILE ($checkTemperature) differs from the requested ($Temperature)"
																																																																																																																																																																																																																																																																																																																																								#				echo "CAUTION!!! The temperature in $OUTFILE ($checkTemperature) differs from the requested ($Temperature)" >> $tempWarning
																																																																																																																																																																																																																																																																																																																																								#			fi
																																																																																																																																																																																																																																																																																																																																											if [[ "${#HARMFREQS[@]}" -eq 0 ]]; then S_vib=0.000; fi
																																																																																																																																																																																																																																																																																																																																														echo -e "Read from $PROG Output:\n${#HARMFREQS[@]} vibrational frequencies (not printed for clarity)\nS_rot_gas (cal/mol*K, PG $PointGroup Sn $SymmNum): "$S_rot_gas"" >> $tempInputInfo
																																																																																																																																																																																																																																																																																																																																														#			if ! [[ -z $Orca_Srot_warning ]]; then echo "$Orca_Srot_warning";  echo "$Orca_Srot_warning" >> $tempInputInfo; fi
																																																																																																																																																																																																																																																																																																																																																fi
																																																																																																																																																																																																																																																																																																																																																	;;
																																																																																																																																																																																																																																																																																																																																																		\?)
																																																																																																																																																																																																																																																																																																																																																					echo -e "\033[31mInvalid Format! Aborting.\033[0m"
																																																																																																																																																																																																																																																																																																																																																							removeTempFiles
																																																																																																																																																																																																																																																																																																																																																									exit
																																																																																																																																																																																																																																																																																																																																																										;;
																																																																																																																																																																																																																																																																																																																																																								esac

																																																																																																																																																																																																																																																																																																																																																								############################
																																																																																																																																																																																																																																																																																																																																																								#### SOLVENT PARAMETERS ####
																																																																																																																																																																																																																																																																																																																																																								############################

																																																																																																																																																																																																																																																																																																																																																								readSolventLibrary $solvent > $tempSolventData
																																																																																																																																																																																																																																																																																																																																																								ERRORFILE=$tempSolventData; checkExitCode; unset ERRORFILE
																																																																																																																																																																																																																																																																																																																																																								#### read data from solvent library unless given explicitly
																																																																																																																																																																																																																																																																																																																																																								re='^[0-9]+(\.[0-9]*)?$'
																																																																																																																																																																																																																																																																																																																																																								if ! [[ $Density =~ $re ]]; then Density=$(grep -m1 -i "Density" $tempSolventData | awk '{print $NF}'); else echo "Solvent Density is modified by hand: $Density"; fi
																																																																																																																																																																																																																																																																																																																																																								if ! [[ $MW_S =~ $re ]]; then MW_S=$(grep -m1 -i "MolarMass" $tempSolventData | awk '{print $NF}'); else echo "Solvent Molar Mass is modified by hand: $MW_S"; fi
																																																																																																																																																																																																																																																																																																																																																								if ! [[ $Vol_S =~ $re ]]; then Vol_S=$(grep -m1 -i "vdW-Volume" $tempSolventData | awk '{print $NF}'); else echo "Solvent vdW-Volume is modified by hand: $Vol_S"; fi
																																																																																																																																																																																																																																																																																																																																																								if ! [[ $Permitivity =~ $re ]]; then Permitivity=$(grep -m1 -i "Permitivity" $tempSolventData | awk '{print $NF}'); else echo "Solvent Permitivity is modified by hand: $Permitivity"; fi
																																																																																																																																																																																																																																																																																																																																																								if ! [[ -z $deuterated ]]; then
																																																																																																																																																																																																																																																																																																																																																										solvent=$(echo ""$solvent"-d"$deuterated"")
																																																																																																																																																																																																																																																																																																																																																											Density=$(echo "$Density*(1+((1.006*$deuterated)/$MW_S))" | bc -l | xargs printf "%.*f\n" 3)
																																																																																																																																																																																																																																																																																																																																																												MW_S=$(echo "$MW_S+($deuterated*1.006)" | bc -l | xargs printf "%.*f\n" 3)
																																																																																																																																																																																																																																																																																																																																																											fi
																																																																																																																																																																																																																																																																																																																																																											echo -e "Read solvent parameters:\nSolvent: $solvent\nPermitivity: $Permitivity\nDensity: $Density g/mL\nMolar Mass: $MW_S g/mol\nvdW-Volume: $Vol_S Ang**3"
																																																																																																																																																																																																																																																																																																																																																											newSection

																																																																																																																																																																																																																																																																																																																																																											###########################
																																																																																																																																																																																																																																																																																																																																																											#### SOLUTE PARAMETERS ####
																																																																																																																																																																																																																																																																																																																																																											###########################

																																																																																																																																																																																																																																																																																																																																																											echo "Calculate solute parameters..."
																																																																																																																																																																																																																																																																																																																																																											echo "Calculate the vdW-Volume..."
																																																																																																																																																																																																																																																																																																																																																											calcVolume_vdW $XYZFILE > $tempcalcVolume
																																																																																																																																																																																																																																																																																																																																																											ERRORFILE=$tempcalcVolume; checkExitCode; unset ERRORFILE
																																																																																																																																																																																																																																																																																																																																																											echo "Calculate the Radius of Gyration..."
																																																																																																																																																																																																																																																																																																																																																											calcGyradius $XYZFILE > $tempcalcGyradius
																																																																																																																																																																																																																																																																																																																																																											ERRORFILE=$tempcalcGyradius; checkExitCode; unset ERRORFILE
																																																																																																																																																																																																																																																																																																																																																											NUMAT=$(grep -i "number of atoms" $tempcalcGyradius | awk '{print $NF}')	### number of atoms considered in Gyradius-calculation
																																																																																																																																																																																																																																																																																																																																																											Vol_M=$(tail -1 $tempcalcVolume | awk '{print $NF}')
																																																																																																																																																																																																																																																																																																																																																											MW_M=$(grep "Molecular Mass" $tempcalcGyradius | awk '{print $NF}')
																																																																																																																																																																																																																																																																																																																																																											r_gyr=$(tail -1 $tempcalcGyradius | awk '{print $NF}')
																																																																																																																																																																																																																																																																																																																																																											newSection
																																																																																																																																																																																																																																																																																																																																																											echo -e "Solute parameters ($NUMAT atoms):\nvdW-Volume: $Vol_M Ang**3\nMolecular Mass: $MW_M amu\nGyradius: $r_gyr Ang"
																																																																																																																																																																																																																																																																																																																																																											if ! [[ -z "$S_rot_gas" ]]; then echo -e "S_rot_gas (PG $PointGroup Sn $SymmNum): "$S_rot_gas" cal/mol*K"; fi	#### S_rot_gas assigned in case-section (see above)
																																																																																																																																																																																																																																																																																																																																																											echo -e "${#HARMFREQS[@]} vibrational frequencies (not printed for clarity)"
																																																																																																																																																																																																																																																																																																																																																											newSection

																																																																																																																																																																																																																																																																																																																																																											#############################
																																																																																																																																																																																																																																																																																																																																																											##### CALCULATE ENTROPY #####
																																																																																																																																																																																																																																																																																																																																																											#############################

																																																																																																																																																																																																																																																																																																																																																											echo "Calculate S_trans..."
																																																																																																																																																																																																																																																																																																																																																											calcS_trans > $tempentropies
																																																																																																																																																																																																																																																																																																																																																											echo -e "Info: Cavity volume: $Vol_cav Ang**3\nInfo: Number of accessible cavities: $N_cav (typically 1 unless small solute in bulky/low density solvents)"

																																																																																																																																																																																																																																																																																																																																																											echo "Calculate S_rot..."
																																																																																																																																																																																																																																																																																																																																																											calcS_rot >> $tempentropies

																																																																																																																																																																																																																																																																																																																																																											if ! [[ -z ${HARMFREQS[@]} ]]; then
																																																																																																																																																																																																																																																																																																																																																													echo "Calculate S_vib..."
																																																																																																																																																																																																																																																																																																																																																														HARMFREQS=$(echo "${HARMFREQS[@]}" | sed 's/ /,/g') ## adjust delimiter for frequencies from OUT-File for calcQRRHO script (see case-section above)
																																																																																																																																																																																																																																																																																																																																																															calcQRRHO -i $HARMFREQS >> $tempentropies
																																																																																																																																																																																																																																																																																																																																																																ERRORFILE=$tempentropies; checkExitCode; unset ERRORFILE
																																																																																																																																																																																																																																																																																																																																																																	if grep -q -i "imaginary" $tempentropies; then grep -i "imaginary" $tempentropies; fi
																																																																																																																																																																																																																																																																																																																																																																		NUMFREQS=$(grep -i "vibrational frequencies" $tempentropies | grep -i "read" | awk '{print $2}')
																																																																																																																																																																																																																																																																																																																																																																			S_vib=$(tail -1 $tempentropies | awk '{print $NF}')
																																																																																																																																																																																																																																																																																																																																																																				checkfreqs=$(echo "3*$NUMAT-${#HARMFREQS[@]}" | bc -l)
																																																																																																																																																																																																																																																																																																																																																																					if [[ "$checkfreqs" -ne "5" ]] && [[ "$checkfreqs" -ne "6" ]] && [[ "$checkfreqs" -ne "7" ]]; then
																																																																																																																																																																																																																																																																																																																																																																								echo -e "Unphysical number of vibrational frequencies!!!!"
																																																																																																																																																																																																																																																																																																																																																																										echo -e "ERROR!!! Mismatch between the number of vibrational frequencies and number of atoms!\nNumber of vibrational frequencies read into this script: ${#HARMFREQS[@]}\nNumber of vibrational frequencies read in S_vib script: $NUMFREQS\nNumber of atoms: $NUMAT\nThis should give $check1 or $check2 vibrational frequencies for non-linear or linear molecules, respectively"
																																																																																																																																																																																																																																																																																																																																																																												echo -e "ERROR!!! Mismatch between the number of vibrational frequencies and number of atoms!\nNumber of vibrational frequencies read into this script: ${#HARMFREQS[@]}\nNumber of vibrational frequencies read in S_vib script: $NUMFREQS\nNumber of atoms: $NUMAT\nThis should give $check1 or $check2 vibrational frequencies for non-linear or linear molecules, respectively" >> $tempWarning
																																																																																																																																																																																																																																																																																																																																																																													fi
																																																																																																																																																																																																																																																																																																																																																																													#	check1=$(echo "3*$NUMAT-6" | bc -l)
																																																																																																																																																																																																																																																																																																																																																																													#	check2=$(echo "3*$NUMAT-5" | bc -l)
																																																																																																																																																																																																																																																																																																																																																																													#	if [[ "${#HARMFREQS[@]}" -ne "$NUMFREQS" ]] || ([[ "$NUMFREQS" -ne "$check1" ]] && [[ "$NUMFREQS" -ne "$check2" ]]); then
																																																																																																																																																																																																																																																																																																																																																																													#		echo -e "ERROR!!! Mismatch between the number of vibrational frequencies and number of atoms!\nNumber of vibrational frequencies read into this script: ${#HARMFREQS[@]}\nNumber of vibrational frequencies read in S_vib script: $NUMFREQS\nNumber of atoms: $NUMAT\nThis should give $check1 or $check2 vibrational frequencies for non-linear or linear molecules, respectively"
																																																																																																																																																																																																																																																																																																																																																																													#		echo -e "ERROR!!! Mismatch between the number of vibrational frequencies and number of atoms!\nNumber of vibrational frequencies read into this script: ${#HARMFREQS[@]}\nNumber of vibrational frequencies read in S_vib script: $NUMFREQS\nNumber of atoms: $NUMAT\nThis should give $check1 or $check2 vibrational frequencies for non-linear or linear molecules, respectively" >> $tempWarning
																																																																																																																																																																																																																																																																																																																																																																													#	elif [[ "$NUMFREQS" -eq "$check2" ]]; then
																																																																																																																																																																																																																																																																																																																																																																													#		echo "WARNING: Unless $FILE is linear, there is a mismatch between read vibrational frequencies ($NUMFREQ) and the number of atoms ($NUMAT)"
																																																																																																																																																																																																																																																																																																																																																																													#		echo "WARNING: Unless $FILE is linear, there is a mismatch between read vibrational frequencies ($NUMFREQ) and the number of atoms ($NUMAT)" >> $tempWarning
																																																																																																																																																																																																																																																																																																																																																																													#	fi
																																																																																																																																																																																																																																																																																																																																																																												fi

																																																																																																																																																																																																																																																																																																																																																																												echo "Calculate S_cav..."
																																																																																																																																																																																																																																																																																																																																																																												calcS_cav >> $tempentropies

																																																																																																																																																																																																																																																																																																																																																																												echo "Calculate S_conc..."
																																																																																																																																																																																																																																																																																																																																																																												calcS_conc >> $tempentropies
																																																																																																																																																																																																																																																																																																																																																																												echo -e "Info: Standard state correction for 1 bar -> $ref_sol"

																																																																																																																																																																																																																																																																																																																																																																												S_solv=$(echo "$S_trans_diff+$S_cav+$S_rot_diff+$S_conc" | sed 's/--/+/g' | bc -l | xargs printf "%.*f\n" 3) ### = S_soln - S_gas + S_conc = S_trans_diff + S_cav + S_rot_diff + S_conc
																																																																																																																																																																																																																																																																																																																																																																												if [[ "$thermo" = "1" ]]; then
																																																																																																																																																																																																																																																																																																																																																																													#	echo -e "bugfix: trans: $S_trans\nvib: $S_vib\nrot: $S_rot\ncav: $S_cav\nconc: $S_conc"
																																																																																																																																																																																																																																																																																																																																																																														S_soln=$(echo ""$S_trans"+"$S_vib"+"$S_rot"+"$S_cav"+"$S_conc"" | sed 's/--/+/g' | bc -l | xargs printf "%.*f\n" 3)
																																																																																																																																																																																																																																																																																																																																																																															S_vib=$(echo $S_vib | xargs printf "%.*f\n" 3)
																																																																																																																																																																																																																																																																																																																																																																																S_rot=$(echo $S_rot | xargs printf "%.*f\n" 3)
																																																																																																																																																																																																																																																																																																																																																																															fi
																																																																																																																																																																																																																																																																																																																																																																															S_trans=$(echo $S_trans | xargs printf "%.*f\n" 3)
																																																																																																																																																																																																																																																																																																																																																																															S_cav=$(echo $S_cav | xargs printf "%.*f\n" 3)
																																																																																																																																																																																																																																																																																																																																																																															S_conc=$(echo $S_conc | xargs printf "%.*f\n" 3)
																																																																																																																																																																																																																																																																																																																																																																															S_trans_diff=$(echo $S_trans_diff | xargs printf "%.*f\n" 3)
																																																																																																																																																																																																																																																																																																																																																																															S_rot_diff=$(echo $S_rot_diff | xargs printf "%.*f\n" 3)

																																																																																																																																																																																																																																																																																																																																																																															#### PRINT ENTROPIES
																																																																																																																																																																																																																																																																																																																																																																															newSection
																																																																																																																																																																																																																																																																																																																																																																															echo -e "All Entropies in cal/mol*K at $Temperature K (1 bar -> $ref_sol):"

																																																																																																																																																																																																																																																																																																																																																																															if [[ "$thermo" = "1" ]]; then
																																																																																																																																																																																																																																																																																																																																																																																	echo -e "S_trans_diff:\t$S_trans_diff\nS_rot_diff:\t$S_rot_diff\nS_trans:\t$S_trans\nS_rot:\t\t$S_rot\nS_vib:\t\t$S_vib\nS_cav:\t\t$S_cav\nS_conc:\t\t$S_conc\n\t\t-------\nS_solv:\t\t$S_solv\nS_soln:\t\t$S_soln"
																																																																																																																																																																																																																																																																																																																																																																																		echo -e "S_trans_diff:\t$S_trans_diff\nS_rot_diff:\t$S_rot_diff\nS_trans:\t$S_trans\nS_rot:\t\t$S_rot\nS_vib:\t\t$S_vib\nS_cav:\t\t$S_cav\nS_conc:\t\t$S_conc\n\t\t-------\nS_solv:\t\t$S_solv\nS_soln:\t\t$S_soln" > $tempentropies
																																																																																																																																																																																																																																																																																																																																																																																	else
																																																																																																																																																																																																																																																																																																																																																																																			echo -e "S_trans_diff:\t$S_trans_diff\nS_rot_diff:\t$S_rot_diff\nS_trans:\t$S_trans\nS_cav:\t\t$S_cav\nS_conc:\t\t$S_conc\n\t\t-------\nS_solv:\t\t$S_solv"
																																																																																																																																																																																																																																																																																																																																																																																				echo -e "S_trans_diff:\t$S_trans_diff\nS_rot_diff:\t$S_rot_diff\nS_trans:\t$S_trans\nS_cav:\t\t$S_cav\nS_conc:\t\t$S_conc\n\t\t-------\nS_solv:\t\t$S_solv" > $tempentropies
																																																																																																																																																																																																																																																																																																																																																																																			fi


																																																																																																																																																																																																																																																																																																																																																																																			###### CREATE OUTPUT FILE
																																																																																																																																																																																																																																																																																																																																																																																			cat $tempInputInfo > $RESULTFILE
																																																																																																																																																																																																																																																																																																																																																																																			newSection >> $RESULTFILE
																																																																																																																																																																																																																																																																																																																																																																																			cat $tempSolventData >> $RESULTFILE
																																																																																																																																																																																																																																																																																																																																																																																			newSection >> $RESULTFILE
																																																																																																																																																																																																																																																																																																																																																																																			cat $tempcalcVolume >> $RESULTFILE
																																																																																																																																																																																																																																																																																																																																																																																			cat $tempcalcGyradius >> $RESULTFILE
																																																																																																																																																																																																																																																																																																																																																																																			newSection >> $RESULTFILE
																																																																																																																																																																																																																																																																																																																																																																																			cat $tempentropies >> $RESULTFILE
																																																																																																																																																																																																																																																																																																																																																																																			if [[ -f $tempWarning ]]; then echo "Please consider detected Warnings (see $RESULTFILE)!"; cat $tempWarning >> $RESULTFILE; fi

																																																																																																																																																																																																																																																																																																																																																																																			### clean directory from temporary files
																																																																																																																																																																																																																																																																																																																																																																																			removeTempFiles
																																																																																																																																																																																																																																																																																																																																																																																			if [[ -f $XYZFILE ]] && [[ "$XYZFILE" != "$FILE" ]]; then rm $XYZFILE; fi


																																																																																																																																																																																																																																																																																																																																																																																			## benchmark vs exp: num=$(wc -l list-compounds.txt | awk '{print $1}'); for (( i= 1 ; i <= $num; i++ )); do unset S_solv ref; T=$(sed -n "$i"p list-compounds.txt | awk '{print $4}'); soluteindex=$(sed -n "$i"p list-compounds.txt | awk '{print $1}'); solvent=$(sed -n "$i"p list-compounds.txt | awk '{print $3}' | tr '[:upper:]' '[:lower:]'); FILE=$(find . -name ""$soluteindex"_*.xyz" | cut -f2 -d'/'); solute=$(echo $FILE | cut -f2 -d'_' | cut -f1 -d '.' | tr '[:upper:]' '[:lower:]'); if [[ "$solvent" = "$solute" ]]; then S_solv=$(calcEntropySolv -f $FILE -s $solvent -T $T -c | tail -1 | awk '{print $NF}'); ref=liq; else S_solv=$(calcEntropySolv -f $FILE -s $solvent -T $T | tail -1 | awk '{print $NF}'); fi; echo $i $S_solv $solute $solvent $ref $T >> results_PBE0D3BJ_def2TZVPP.txt; done
